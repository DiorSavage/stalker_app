"""create token model and update user model

Revision ID: 522bbc7022eb
Revises: 7528971041a2
Create Date: 2025-10-05 16:55:32.050121

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '522bbc7022eb'
down_revision: Union[str, None] = '7528971041a2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ban_list',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc', now())"), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('ban_status', sa.Enum('banned', 'unbanned', name='ban_status_enum'), server_default='unbanned', nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ban_list_admin_id'), 'ban_list', ['admin_id'], unique=False)
    op.create_index(op.f('ix_ban_list_id'), 'ban_list', ['id'], unique=True)
    op.create_index(op.f('ix_ban_list_user_id'), 'ban_list', ['user_id'], unique=False)
    op.create_table('tokens',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc', now())"), nullable=True),
    sa.Column('expire_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tokens_id'), 'tokens', ['id'], unique=True)
    op.create_index(op.f('ix_tokens_token'), 'tokens', ['token'], unique=False)
    op.create_index(op.f('ix_tokens_user_id'), 'tokens', ['user_id'], unique=False)
    op.add_column('users', sa.Column('is_banned', sa.Boolean(), server_default='0', nullable=True))
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), server_default='0', nullable=True))
    op.alter_column('users', 'birthday',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'birthday',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.drop_column('users', 'is_admin')
    op.drop_column('users', 'is_banned')
    op.drop_index(op.f('ix_tokens_user_id'), table_name='tokens')
    op.drop_index(op.f('ix_tokens_token'), table_name='tokens')
    op.drop_index(op.f('ix_tokens_id'), table_name='tokens')
    op.drop_table('tokens')
    op.drop_index(op.f('ix_ban_list_user_id'), table_name='ban_list')
    op.drop_index(op.f('ix_ban_list_id'), table_name='ban_list')
    op.drop_index(op.f('ix_ban_list_admin_id'), table_name='ban_list')
    op.drop_table('ban_list')
    # ### end Alembic commands ###
